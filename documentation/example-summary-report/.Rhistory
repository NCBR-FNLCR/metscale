library(tidyverse)
shiny::includeHTML("SRR606249_subset10_trim2.kaiju_species_krona.html")
htmltools::includeHTML("SRR606249_subset10_trim2.kaiju_species_krona.html")
library(knitr)
library(tidyverse)
library(DT)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
theme_set(theme_bw())
read_tsv("SRR606249_subset10_fastqc_multiqc_report_data/multiqc_general_stats.txt") %>%
set_names(~str_remove(., "FastQC_mqc-generalstats-")) %>%
mutate_if(is.double, round, 2) %>%
DT::datatable(caption="General QA statistics about samples in this run.")
list.files(pattern="uniqueK\\d\\d\\.txt")
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.)
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, "trim\\d+"))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+"))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+"))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+"))
scan("SRR606249_subset10_trim2_interleaved_uniqueK21.txt")
?scan
scan("SRR606249_subset10_trim2_interleaved_uniqueK21.txt", what=character())
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt")
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt") %>%
grep("unique k-mers")
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt") %>%
grep("unique k-mers", .)
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt") %>%
grep("unique k-mers", ., value=TRUE)
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt") %>%
grep("unique k-mers", ., value=TRUE) %>%
str_extract("\\d+")
read_lines("SRR606249_subset10_trim2_interleaved_uniqueK21.txt") %>%
grep("unique k-mers", ., value=TRUE) %>%
str_extract("\\d+") %>%
as.integer()
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+"))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=get_unique_kmers(file))
get_unique_kmers <- function(file) {
read_lines(file) %>%
grep("unique k-mers", ., value=TRUE) %>%
str_extract("\\d+") %>%
as.integer()
}
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=get_unique_kmers(file))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
rowwise() %>%
mutate(number_unique_kmers=get_unique_kmers(file))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(x=map(file, get_unique_kmers))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(x=map_int(file, get_unique_kmers))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(x=map_int(file, get_unique_kmers))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=map_int(file, get_unique_kmers))
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=map_int(file, get_unique_kmers)) %>%
select(-file)
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=map_int(file, get_unique_kmers)) %>%
select(-file) %>%
mutate_if(is.integer, scales::comma)
list.files(pattern="uniqueK\\d\\d\\.txt") %>%
tibble(file=.) %>%
mutate(sample=str_extract(file, ".+trim\\d+")) %>%
mutate(K=str_extract(file, "K\\d+")) %>%
mutate(number_unique_kmers=map_int(file, get_unique_kmers)) %>%
select(-file) %>%
mutate_if(is.integer, scales::comma) %>%
DT::datatable(caption="Number of unique kmers in each sample in this run.")
x <- list.files(pattern="podar_metaG_sbu.tsv", recursive=TRUE)
glue::glue("- **[{x}]({x})**") %>%
cat(sep="\n")
x <- list.files(pattern="gather_.+\\.csv$", recursive=TRUE)
x
x <- list.files(pattern="gather_.+\\.csv$", recursive=TRUE)
glue::glue("- **[{x}]({x})**") %>%
cat(sep="\n")
x <- list.files(pattern="read_assembly_comparison", recursive=TRUE)
glue::glue("- **[{x}]({x})**") %>%
cat(sep="\n")
x <- list.files(pattern="read_assembly_comparison", recursive=FALSE)
glue::glue("- **[{x}]({x})**") %>%
cat(sep="\n")
x <- list.files(pattern="read_assembly_comparison.+\\.png$", recursive=TRUE)
x
basename(x)
bx <- basename(x)
x <- list.files(pattern="read_assembly_comparison.+\\.png$", recursive=TRUE)
bx <- basename(x)
glue::glue("- **[{bx}]({x})**") %>%
cat(sep="\n")
x
knitr::include_graphics(i)
for (i in x) {
knitr::include_graphics(i)
}
knitr::include_graphics(i)
x <- list.files(pattern="kaiju.+out")
x
file.size(x)
?file.size
format.object_size(file.size(x))
utils::format.object_size(file.size(x))
utils:::format.object_size(file.size(x))
utils:::format.object_size(file.size(x), unit="mb")
utils:::format.object_size(file.size(x), unit="MB")
x <- list.files(pattern="kaiju.+summary$")
glue::glue("- **[{x}]({x})**") %>%
cat(sep="\n")
