## Read fragment deduplication (FASTQ -> FASTA), quality control coming
## soon.
[READPREP]
# Path(s) to FASTQ files to deduplicate, absolute path or relative to
# working dir.
fastq = {fastq_output}
# Path to FASTA query file produced by readprep. Avoid moving or renaming
# this file after it is made, required metadata is stored with this file.
fasta = {data_dir}/QueryFastas/queries.fasta
# --lcd takes first N bases of each read, where N = shortest read length
# in FASTQ --segment takes subsequent N length sequences of each read (set
# N with --kmer)
trim_mode = segment
# Set size of each read segment for segment trim mode.
kmer = {kmer_output}

## Metagenomics binning
[BINNING]
# Set recommended parameters for SEED_SIZE, MIN_SEEDS, SEED_GAP for  fast
# (more misses, fast runtime), efficient (med misses, med runtime) or
# sensitive (few misses, slow) runs.  fast=17,5,2, efficient=14,4,2,
# sensitive=11,3,1. Passing values for the SEED_SIZE, MIN_SEEDS or
# SEED_GAP parameters will override these settings.
binning_mode = efficient
# Path to FASTA query file produced by readprep.
fasta = {data_dir}/QueryFastas/queries.fasta
# Path to sequence database configuration json.
database_config = {database_config}
# Path to write binning files to.
binning_outpath = {data_dir}/Binning/
# Merged binning output file. (WARNING avoid moving output files from
# their original directory, downstream processes rely on meta data
# (.params file)  in directory)
merge_file = {data_dir}/Binning/merged.clp
# Edit distance to tolerate in matched reference sites
edits = 3
# Exact match query size. Overrides binning mode setting.
seed_size = 
# Minimum number of seeds to perform alignment of a candidate site.
# Overrides binning mode setting.
min_seeds = 
# Gap between seeds used for initial exact match. Overrides binning mode
# setting.
seed_gap = 

## Find signature hits and summarize findings
[SUMMARY]
# Merged binning output file.
merge_file = {data_dir}/Binning/merged.clp
# File to place signature hits output.
signature_file = {data_dir}/Summary/signature.txt
# File to place summary table. WARNING avoid moving output files from
# original directory, downstream processes rely on metadata (.params file)
# stored in directory.
summary_file = {data_dir}/Summary/summary.csv
# Roll up read hits to a common genus or family level when searching for
# signature hits.  (Takes priority over LCA search when family or genus
# exist for a taxonomic ID.) More roll up options comming soon.
tax_level = species

## Run statistical analysis
[ANALYZE]
# File to write output.
analysis_file = {data_dir}/Analysis/analysis.csv
# Path to summary output
summary_file = {data_dir}/Summary/summary.csv
# Up to N_KMERS random kmers will be generated for each of the candidate
# taxa. These will be used to estimate expected values.
n_kmers = {n_kmers}
# Run analysis only for taxa with unique signature hits that are greater
# than SIGNATURE_CUTOFF.
signature_cutoff = {signature_cutoff}
# Provide a custom list of candidate taxa instead of calculating
# candidates based SIGNATURE_CUTOFF of unique signature hits. Should be a
# file with taxids listed in a single column.
can_taxa_list = 
# If (T)rue, use previously calculated expected values where available. If
# (F)alse, all expected values will be recalculated and used to update the
# database.
use_database = T

## Get query sequences associated with a given taxid
[EXTRACT]
# Directory to place extracted reads.
extract_path = {data_dir}/Extracted_Reads/
# List of species to extract. (Space separated).
taxids = 
# Path to either merged binning output or signature hits file.  The merged
# file should be passed if all query hits should be extracted and the
# signature hits file should be passed if  only signature queries are
# desired.
input_hits = 
# Breakdown extracted queries by sample.
by_sample = T
# Include all descendant taxa in extracted queries. Queries may be
# extracted before roll up, so by default, descendant taxa will be
# included in search if a higher level taxid is provided. If False (F),
# only exact matches to taxid will be returned.
descendants = T

## Whole genome focused array SNP typing
[WGFAST]
# Directory to place extracted reads from MTSv pipeline.
extract_path = {data_dir}/Extracted_Reads/
# Taxid to extract.
taxids = 
# Path to either merged binning output or signature hits file.  The merged
# file should be passed if all query hits should be extracted and the
# signature hits file should be passed if  only signature queries are
# desired.
input_hits = {data_dir}/Binning/merged.clp
# Breakdown extracted queries by sample.
by_sample = T
# Include all descendant taxa in extracted queries. Queries may be
# extracted before roll up, so by default, descendant taxa will be
# included in search if a higher level taxid is provided. If False, only
# exact matches to taxid will be returned.
descendants = T
# Path to reference file directory. Should be path to  WGFast database the
# corresponds to extracted taxid.
reference_directory = 
# Path to place wgfast output
wgfast_output = {data_dir}/WGFast/
# minimum SNP coverage required to be called a SNP
coverage = 3
# proportion of alleles to be called a SNP
proportion = 0.9
# Keep temp files?
keep = F
# Run subsample routine?
subsample = T
# Number of subsamples to process
subnums = 100
# Run depth of coverage on all files?
doc = T
# Temporary directory for GATK analysis
temp = {data_dir}/WGFast/tmp
# How close does a subsample have to be from true placement?
fudge_factor = 0.1
# Only run sub-sample routine and exit?
only_subs = F
# Which model to run with raxml.
model = ASC_GTRGAMMA
# How to call GATK?
gatk_method = EMIT_ALL_CONFIDENT_SITES

## Alignment-free binning of unaligned queries
[CONCOCT]
# Directory to place result of alignment free binning
concoct_output = Concoct
# Path(s) to FASTA files with unaligned queries, absolute path or relative
# to working dir.
unaligned_queries = {data_dir}/Binning/unaligned_queries_*.fasta
# Options to pass to megahit for assembly in quotes. Include any options
# except for input, output, or hardware options.
megahit_opts = 
# Options to pass to concoct cut_up_fasta.py in quotes. Include any
# options except for input and output.
cutup_opts = 
# Options to pass to bwa when mapping reads to contigs in quotes. Include
# any options except for input, output, and threads. Use --threads option
# to set max threads for all jobs.
bwa_opts = 
# Options for running concoct binning in quotes. Include any options
# except for input, output, and threads.  Use --threads option to set max
# threads for all jobs.
concoct_opts = 

